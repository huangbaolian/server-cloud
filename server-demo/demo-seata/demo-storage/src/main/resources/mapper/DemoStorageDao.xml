<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.demo.seater.storage.dao.StorageMapper">

    <resultMap type="com.server.demo.seater.storage.entity.Storage" id="DemoStorageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="total" column="total" jdbcType="INTEGER"/>
        <result property="used" column="used" jdbcType="INTEGER"/>
        <result property="residue" column="residue" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_storage.demo_storage(product_id, total, used, residue)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.productId}, #{entity.total}, #{entity.used}, #{entity.residue})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_storage.demo_storage(product_id, total, used, residue)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productId}, #{entity.total}, #{entity.used}, #{entity.residue})
        </foreach>
        on duplicate key update
         product_id = values(product_id) , total = values(total) , used = values(used) , residue = values(residue)     </insert>

</mapper>

